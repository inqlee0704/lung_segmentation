
  0%|                                                                                                                                                                                                   | 0/4 [00:00<?, ?it/s]
----------------------------------------------------------------
        Layer (type)               Output Shape         Param #
================================================================
            Conv3d-1       [-1, 32, 64, 64, 64]             896
       BatchNorm3d-2       [-1, 32, 64, 64, 64]              64
              ReLU-3       [-1, 32, 64, 64, 64]               0
            Conv3d-4       [-1, 32, 64, 64, 64]          27,680
       BatchNorm3d-5       [-1, 32, 64, 64, 64]              64
              ReLU-6       [-1, 32, 64, 64, 64]               0
            Conv3d-7        [-1, 1, 64, 64, 64]              33
         MaxPool3d-8       [-1, 32, 32, 32, 32]               0
            Conv3d-9       [-1, 64, 32, 32, 32]          55,360
      BatchNorm3d-10       [-1, 64, 32, 32, 32]             128
             ReLU-11       [-1, 64, 32, 32, 32]               0
           Conv3d-12       [-1, 64, 32, 32, 32]         110,656
      BatchNorm3d-13       [-1, 64, 32, 32, 32]             128
             ReLU-14       [-1, 64, 32, 32, 32]               0
           Conv3d-15        [-1, 1, 32, 32, 32]              65
         Upsample-16        [-1, 1, 64, 64, 64]               0
        MaxPool3d-17       [-1, 64, 16, 16, 16]               0
           Conv3d-18      [-1, 128, 16, 16, 16]         221,312
      BatchNorm3d-19      [-1, 128, 16, 16, 16]             256
             ReLU-20      [-1, 128, 16, 16, 16]               0
           Conv3d-21      [-1, 128, 16, 16, 16]         442,496
      BatchNorm3d-22      [-1, 128, 16, 16, 16]             256
             ReLU-23      [-1, 128, 16, 16, 16]               0
           Conv3d-24        [-1, 1, 16, 16, 16]             129
         Upsample-25        [-1, 1, 64, 64, 64]               0
        MaxPool3d-26         [-1, 128, 8, 8, 8]               0
           Conv3d-27         [-1, 256, 8, 8, 8]         884,992
      BatchNorm3d-28         [-1, 256, 8, 8, 8]             512
             ReLU-29         [-1, 256, 8, 8, 8]               0
           Conv3d-30         [-1, 256, 8, 8, 8]       1,769,728
      BatchNorm3d-31         [-1, 256, 8, 8, 8]             512
             ReLU-32         [-1, 256, 8, 8, 8]               0
           Conv3d-33           [-1, 1, 8, 8, 8]             257
         Upsample-34        [-1, 1, 64, 64, 64]               0
           Conv3d-35        [-1, 8, 64, 64, 64]             872
      BatchNorm3d-36        [-1, 8, 64, 64, 64]              16
             ReLU-37        [-1, 8, 64, 64, 64]               0
           Conv3d-38        [-1, 2, 64, 64, 64]             434
          Softmax-39        [-1, 2, 64, 64, 64]               0
================================================================
Total params: 3,516,846
Trainable params: 3,516,846
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 1.00
Forward/backward pass size (MB): 584.79
Params size (MB): 13.42
Estimated Total Size (MB): 599.20
  0%|                                                                                                                                                                                                   | 0/4 [00:13<?, ?it/s]
Traceback (most recent call last):
  File "main.py", line 155, in <module>
    trn_loss, trn_dice_loss, trn_bce_loss = eng.train(train_loader)
  File "/data1/inqlee0704/lung_segmentation/engine.py", line 69, in train
    loss, bce_loss, dice_loss = cal_loss(outputs, targets)
  File "/data1/inqlee0704/lung_segmentation/engine.py", line 34, in cal_loss
    bce_loss = BCE_fn(outputs, targets)
  File "/home/inqlee0704/anaconda3/envs/py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/inqlee0704/anaconda3/envs/py37/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 631, in forward
    reduction=self.reduction)
  File "/home/inqlee0704/anaconda3/envs/py37/lib/python3.7/site-packages/torch/nn/functional.py", line 2538, in binary_cross_entropy_with_logits
    raise ValueError("Target size ({}) must be the same as input size ({})".format(target.size(), input.size()))
ValueError: Target size (torch.Size([1, 1, 64, 64, 64])) must be the same as input size (torch.Size([1, 2, 64, 64, 64]))